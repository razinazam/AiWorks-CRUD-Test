{"ast":null,"code":"/**\n *\n * DO NOT MODIFY THIS FILE\n * DO NOT MODIFY THIS FILE\n * DO NOT MODIFY THIS FILE\n *\n * Consider functions in this file to represent API endpoints.\n * Their implementation should be a black box.\n *\n */\n// Acts as our database\nvar users = []; // Return all users\n\nexport function getUsers() {\n  return JSON.parse(JSON.stringify(users));\n} // Creates a user with the given details and returns their generated ID.\n\nexport function createUser(firstName, lastName, email) {\n  // Just the fields together with some random string\n  var userId = \"\".concat(firstName).concat(lastName).concat(email, \"-\").concat(Math.random().toString().slice(-5));\n  return createUserWithId(firstName, lastName, email, userId);\n} // Creates a user with the given details and with the given ID.\n\nexport function createUserWithId(firstName, lastName, email, userId) {\n  users.push({\n    userId: userId,\n    email: email,\n    firstName: firstName,\n    lastName: lastName\n  });\n  return userId;\n} // Removes a user with the given ID\n\nexport function removeUser(userId) {\n  var userIndex = users.findIndex(function (user) {\n    return user.userId == userId;\n  });\n\n  if (userIndex > -1) {\n    users.splice(userIndex, 1);\n    return true; // user removed\n  } else {\n    return false; // user not found\n  }\n}","map":{"version":3,"names":["users","getUsers","JSON","parse","stringify","createUser","firstName","lastName","email","userId","Math","random","toString","slice","createUserWithId","push","removeUser","userIndex","findIndex","user","splice"],"sources":["/Users/razinazam/Desktop/reactjs-assesment-main/src/ApiService.ts"],"sourcesContent":["/**\n *\n * DO NOT MODIFY THIS FILE\n * DO NOT MODIFY THIS FILE\n * DO NOT MODIFY THIS FILE\n *\n * Consider functions in this file to represent API endpoints.\n * Their implementation should be a black box.\n *\n */\n\ninterface User {\n  userId: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n// Acts as our database\nconst users: User[] = [];\n\n// Return all users\nexport function getUsers(): User[] {\n  return JSON.parse(JSON.stringify(users));\n}\n\n// Creates a user with the given details and returns their generated ID.\nexport function createUser(\n  firstName: string,\n  lastName: string,\n  email: string\n): String {\n  // Just the fields together with some random string\n  const userId: string = `${firstName}${lastName}${email}-${Math.random()\n    .toString()\n    .slice(-5)}`;\n  return createUserWithId(firstName, lastName, email, userId);\n}\n\n// Creates a user with the given details and with the given ID.\nexport function createUserWithId(\n  firstName: string,\n  lastName: string,\n  email: string,\n  userId: string\n): String {\n  users.push({\n    userId,\n    email,\n    firstName,\n    lastName,\n  });\n  return userId;\n}\n\n// Removes a user with the given ID\nexport function removeUser(userId: string): Boolean {\n  const userIndex = users.findIndex((user) => user.userId == userId);\n\n  if (userIndex > -1) {\n    users.splice(userIndex, 1);\n    return true; // user removed\n  } else {\n    return false; // user not found\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA,IAAMA,KAAa,GAAG,EAAtB,C,CAEA;;AACA,OAAO,SAASC,QAAT,GAA4B;EACjC,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,KAAf,CAAX,CAAP;AACD,C,CAED;;AACA,OAAO,SAASK,UAAT,CACLC,SADK,EAELC,QAFK,EAGLC,KAHK,EAIG;EACR;EACA,IAAMC,MAAc,aAAMH,SAAN,SAAkBC,QAAlB,SAA6BC,KAA7B,cAAsCE,IAAI,CAACC,MAAL,GACvDC,QADuD,GAEvDC,KAFuD,CAEjD,CAAC,CAFgD,CAAtC,CAApB;EAGA,OAAOC,gBAAgB,CAACR,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,EAA6BC,MAA7B,CAAvB;AACD,C,CAED;;AACA,OAAO,SAASK,gBAAT,CACLR,SADK,EAELC,QAFK,EAGLC,KAHK,EAILC,MAJK,EAKG;EACRT,KAAK,CAACe,IAAN,CAAW;IACTN,MAAM,EAANA,MADS;IAETD,KAAK,EAALA,KAFS;IAGTF,SAAS,EAATA,SAHS;IAITC,QAAQ,EAARA;EAJS,CAAX;EAMA,OAAOE,MAAP;AACD,C,CAED;;AACA,OAAO,SAASO,UAAT,CAAoBP,MAApB,EAA6C;EAClD,IAAMQ,SAAS,GAAGjB,KAAK,CAACkB,SAAN,CAAgB,UAACC,IAAD;IAAA,OAAUA,IAAI,CAACV,MAAL,IAAeA,MAAzB;EAAA,CAAhB,CAAlB;;EAEA,IAAIQ,SAAS,GAAG,CAAC,CAAjB,EAAoB;IAClBjB,KAAK,CAACoB,MAAN,CAAaH,SAAb,EAAwB,CAAxB;IACA,OAAO,IAAP,CAFkB,CAEL;EACd,CAHD,MAGO;IACL,OAAO,KAAP,CADK,CACS;EACf;AACF"},"metadata":{},"sourceType":"module"}